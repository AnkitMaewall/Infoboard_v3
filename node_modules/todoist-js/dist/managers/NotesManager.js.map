{"version":3,"sources":["../../todoist/managers/NotesManager.js"],"names":["NotesManager","item_id","content","api","obj","temp_id","id","generate_uuid","Object","assign","data","params","state","state_name","push","queueCmd","type","args","get","note_id","then","response","error","notes","note","update_state"],"mappings":"g1CAGMA,a,kOAW0B,CAC5B,GAAM,GAAM,mBAAS,CAAEC,SAAF,CAAWC,SAAX,CAAT,CAA+B,KAAKC,GAApC,CAAZ,CACAC,EAAIC,OAAJ,CAAcD,EAAIE,EAAJ,CAAS,KAAKH,GAAL,CAASI,aAAT,EAFK,CAG5BC,OAAOC,MAAP,CAAcL,EAAIM,IAAlB,CAAwBC,CAAxB,CAH4B,CAI5B,KAAKR,GAAL,CAASS,KAAT,CAAe,KAAKC,UAApB,EAAgCC,IAAhC,CAAqCV,CAArC,CAJ4B,OAOJA,EAAIM,IAPA,KAOpBJ,EAPoB,sCAa5B,MAJA,MAAKS,QAAL,CAAc,CACZC,KAAM,UADM,CAEZX,QAASD,EAAIC,OAFD,CAAd,CAGGY,CAHH,CAIA,CAAOb,CACR,C,kCAOY,YAEX,MAAO,MAAKD,GAAL,CAASe,GAAT,CAAa,WAAb,CADM,CAAEC,SAAF,CACN,EAAgCC,IAAhC,CAAqC,WAAc,CACxD,GAAIC,EAASC,KAAb,CACE,MAAO,KAAP,CAEF,GAAM,GAAO,CACXC,MAAOF,EAASG,IAAT,CAAgB,CAACH,EAASG,IAAV,CAAhB,GADI,CAAb,CAKA,MADA,GAAKrB,GAAL,CAASsB,YAAT,CAAsBf,CAAtB,CACA,CAAOW,CACR,CAVM,CAWR,C,sCA3CgB,CAAE,MAAO,OAAU,C,sDA8CvBrB,Y","file":"NotesManager.js","sourcesContent":["import GenericNotesManager from './GenericNotesManager';\nimport Note from './../models/Note';\n\nclass NotesManager extends GenericNotesManager {\n\n  get state_name() { return 'notes'; }\n\n  /**\n  * Creates a local item note object.\n  * @param {number} item_id\n  * @param {string} content\n  * @param {Object} params\n  * @return {Note}\n  */\n  add(item_id, content, params) {\n    const obj = new Note({ item_id, content }, this.api);\n    obj.temp_id = obj.id = this.api.generate_uuid();\n    Object.assign(obj.data, params);\n    this.api.state[this.state_name].push(obj);\n\n    // get obj data w/o id attribute\n    const { id, ...args } = obj.data;\n\n    this.queueCmd({\n      type: 'note_add',\n      temp_id: obj.temp_id,\n    }, args);\n    return obj;\n  }\n\n  /**\n  * Gets an existing note.\n  * @param {number} note_id\n  * @return {Promise}\n  */\n  get(note_id) {\n    const args = { note_id };\n    return this.api.get('notes/get', args).then((response) => {\n      if (response.error) {\n        return null;\n      }\n      const data = {\n        notes: response.note ? [response.note] : [],\n      };\n\n      this.api.update_state(data);\n      return response;\n    });\n  }\n}\n\nexport default NotesManager;\n"]}
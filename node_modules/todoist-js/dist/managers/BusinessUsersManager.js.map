{"version":3,"sources":["../../todoist/managers/BusinessUsersManager.js"],"names":["BusinessUsersManager","api","get","email_list","id","secret"],"mappings":"ykCAEMA,qB,oOAMe,CACjB,MAAO,MAAKC,GAAL,CAASC,GAAT,CAAa,uBAAb,CAAsC,CAAEC,YAAF,CAAtC,CACR,C,gEAQ6B,CAE5B,MAAO,MAAKF,GAAL,CAASC,GAAT,CAAa,kCAAb,CADQ,CAAEE,IAAF,CAAMC,QAAN,CACR,CACR,C,gEAQ6B,CAE5B,MAAO,MAAKJ,GAAL,CAASC,GAAT,CAAa,kCAAb,CADQ,CAAEE,IAAF,CAAMC,QAAN,CACR,CACR,C,0CAGYL,oB","file":"BusinessUsersManager.js","sourcesContent":["import Manager from './Manager';\n\nclass BusinessUsersManager extends Manager {\n  /**\n  * Sends a business user invitation.\n  * @param {string} email_list\n  * @return {Promise}\n  */\n  invite(email_list) {\n    return this.api.get('business/users/invite', { email_list });\n  }\n\n  /**\n  * Accepts a business user invitation.\n  * @param {number} id\n  * @param {string} secret\n  * @return {Promise}\n  */\n  accept_invitation(id, secret) {\n    const params = { id, secret };\n    return this.api.get('business/users/accept_invitation', params);\n  }\n\n  /**\n  * Rejects a business user invitation.\n  * @param {number} id\n  * @param {string} secret\n  * @return {Promise}\n  */\n  reject_invitation(id, secret) {\n    const params = { id, secret };\n    return this.api.get('business/users/reject_invitation', params);\n  }\n}\n\nexport default BusinessUsersManager;\n"]}
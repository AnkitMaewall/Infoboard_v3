{"version":3,"sources":["../../todoist/models/Model.js"],"names":["Model","data","api","temp_id","Object","keys","assign","definition","map","defineProperty","k","get","set","val","JSON","stringify","constructor","name"],"mappings":"mbAGMA,M,YACJ,eAAuB,oCACrB,KAAKC,IAAL,CAAYA,CADS,CAErB,KAAKC,GAAL,CAAWA,CAFU,CAGrB,KAAKC,OAAL,CAAe,EAHM,CAOrBC,OAAOC,IAAP,CAAYD,OAAOE,MAAP,CAAc,CAAEH,QAAS,EAAX,CAAd,CAA+B,KAAKI,UAApC,CAAgDN,CAAhD,CAAZ,EAAmEO,GAAnE,CAAuE,WAAO,CAC5EJ,OAAOK,cAAP,GAA4BC,CAA5B,CAA+B,CAC7BC,IAAK,qBAAM,GAAKV,IAAL,CAAUS,CAAV,CAAN,CADwB,CAE7BE,IAAK,sBAAS,GAAKX,IAAL,CAAUS,CAAV,EAAeG,CAAxB,CAFwB,CAA/B,CAID,CALD,CAMD,C,gEAEU,CACT,GAAM,GAAOC,KAAKC,SAAL,CAAe,KAAKd,IAApB,CAAb,CACA,MAAU,MAAKe,WAAL,CAAiBC,IAA3B,KAAmChB,CAAnC,IACD,C,yBAGYD,K","file":"Model.js","sourcesContent":["/**\n* Implements a generic object.\n*/\nclass Model {\n  constructor(data, api) {\n    this.data = data;\n    this.api = api;\n    this.temp_id = '';\n\n    // Until we decide to imlpement Proxies (lack of browsers/platforms support) lets\n    // generate each setter/getter based on subclass definition, received data and temp_id.\n    Object.keys(Object.assign({ temp_id: '' }, this.definition, data)).map((k) => {\n      Object.defineProperty(this, k, {\n        get: () => this.data[k],\n        set: (val) => this.data[k] = val,\n      })\n    });\n  }\n\n  toString() {\n    const data = JSON.stringify(this.data);\n    return `${this.constructor.name}(${data})`;\n  }\n}\n\nexport default Model;\n"]}
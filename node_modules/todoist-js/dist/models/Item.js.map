{"version":3,"sources":["../../todoist/models/Item.js"],"names":["Item","api","items","update","id","params","Object","assign","data","delete","is_deleted","move","project_id","to_project","close","complete","force_history","checked","in_history","uncomplete","update_item_orders","restore_state","item_order","indent","update_date_complete","new_date_utc","date_string","is_forward","due_date_utc","user_id","content","date_lang","priority","day_order","collapsed","children","labels","assigned_by_uid","responsible_uid","is_archived","sync_id","date_added"],"mappings":"koDAKMA,K,oOAiCW,CACb,KAAKC,GAAL,CAASC,KAAT,CAAeC,MAAf,CAAsB,KAAKC,EAA3B,CAA+BC,CAA/B,CADa,CAEbC,OAAOC,MAAP,CAAc,KAAKC,IAAnB,CAAyBH,CAAzB,CACD,C,wCAKQ,CACP,KAAKJ,GAAL,CAASC,KAAT,CAAeO,MAAf,CAAsB,CAAC,KAAKL,EAAN,CAAtB,CADO,CAEP,KAAKM,UAAL,CAAkB,CACnB,C,oCAMgB,CACf,KAAKT,GAAL,CAASC,KAAT,CAAeS,IAAf,oBAAuB,KAAKC,UAA5B,CAAyC,CAAC,KAAKR,EAAN,CAAzC,EAAsDS,CAAtD,CADe,CAEf,KAAKD,UAAL,CAAkBC,CACnB,C,qCAKO,CACN,KAAKZ,GAAL,CAASC,KAAT,CAAeY,KAAf,CAAqB,KAAKV,EAA1B,CACD,C,2CAM2B,8DAAH,CAAG,CAC1B,KAAKH,GAAL,CAASC,KAAT,CAAea,QAAf,CAAwB,CAAC,KAAKX,EAAN,CAAxB,CAAmCY,CAAnC,CAD0B,CAE1B,KAAKC,OAAL,CAAe,CAFW,CAG1B,KAAKC,UAAL,CAAkBF,CACnB,C,+CAOqD,8DAAtB,CAAsB,6DAKpD,GAJA,KAAKf,GAAL,CAASC,KAAT,CAAeiB,UAAf,CAA0B,CAAC,KAAKf,EAAN,CAA1B,CAAqCgB,CAArC,CAAyDC,CAAzD,CAIA,CAHA,KAAKJ,OAAL,CAAe,CAGf,CAFA,KAAKC,UAAL,CAAkB,CAElB,CAAIG,EAAc,KAAKjB,EAAnB,CAAJ,CAA4B,sBAMtBiB,EAAc,KAAKjB,EAAnB,CANsB,IAExB,KAAKc,UAFmB,MAGxB,KAAKD,OAHmB,MAIxB,KAAKK,UAJmB,MAKxB,KAAKC,MALmB,KAO3B,CACF,C,mEAOyE,8DAAtC,EAAsC,0DAApB,EAAoB,0DAAH,CAAG,CACxE,KAAKtB,GAAL,CAASC,KAAT,CAAesB,oBAAf,CAAoC,KAAKpB,EAAzC,CAA6CqB,CAA7C,CAA2DC,CAA3D,CAAwEC,CAAxE,CADwE,CAExE,KAAKC,YAAL,CAAoBH,GAAgB,KAAKG,YAF+B,CAGxE,KAAKF,WAAL,CAAmBA,GAAe,KAAKA,WACxC,C,sCAnGgB,CACf,MAAO,CACLtB,GAAI,CADC,CAELyB,QAAS,CAFJ,CAGLjB,WAAY,CAHP,CAILkB,QAAS,EAJJ,CAKLJ,YAAa,EALR,CAMLK,UAAW,EANN,CAOLH,aAAc,IAPT,CAQLL,OAAQ,CARH,CASLS,SAAU,CATL,CAULV,WAAY,CAVP,CAWLW,UAAW,CAXN,CAYLC,UAAW,CAZN,CAaLC,SAAU,IAbL,CAcLC,SAdK,CAeLC,gBAAiB,CAfZ,CAgBLC,gBAAiB,IAhBZ,CAiBLrB,QAAS,CAjBJ,CAkBLC,WAAY,CAlBP,CAmBLR,WAAY,CAnBP,CAoBL6B,YAAa,CApBR,CAqBLC,QAAS,IArBJ,CAsBLC,WAAY,EAtBP,CAwBR,C,wCA6EYzC,I","file":"Item.js","sourcesContent":["import Model from './Model';\n\n/**\n* Implements an Item.\n*/\nclass Item extends Model {\n\n  get definition() {\n    return {\n      id: 0,\n      user_id: 0,\n      project_id: 0,\n      content: '',\n      date_string: '',\n      date_lang: '',\n      due_date_utc: null,\n      indent: 0,\n      priority: 0,\n      item_order: 0,\n      day_order: 0,\n      collapsed: 0,\n      children: null,\n      labels: [],\n      assigned_by_uid: 0,\n      responsible_uid: null,\n      checked: 0,\n      in_history: 0,\n      is_deleted: 0,\n      is_archived: 0,\n      sync_id: null,\n      date_added: '',\n    };\n  }\n\n  /**\n  * Updates item.\n  * @param {Object} params\n  */\n  update(params) {\n    this.api.items.update(this.id, params);\n    Object.assign(this.data, params);\n  }\n\n  /**\n  * Deletes item.\n  */\n  delete() {\n    this.api.items.delete([this.id]);\n    this.is_deleted = 1;\n  }\n\n  /**\n  * Moves item to another project.\n  * @param {number} to_project\n  */\n  move(to_project) {\n    this.api.items.move({ [this.project_id]: [this.id] }, to_project);\n    this.project_id = to_project;\n  }\n\n  /**\n  * Marks item as closed.\n  */\n  close() {\n    this.api.items.close(this.id);\n  }\n\n  /**\n  * Marks item as completed.\n  * @param {boolean} force_history\n  */\n  complete(force_history = 0) {\n    this.api.items.complete([this.id], force_history);\n    this.checked = 1;\n    this.in_history = force_history;\n  }\n\n  /**\n  * Marks item as not completed.\n  * @param {boolean} update_item_orders\n  * @param {Object} restore_state\n  */\n  uncomplete(update_item_orders = 1, restore_state = {}){\n    this.api.items.uncomplete([this.id], update_item_orders, restore_state);\n    this.checked = 0;\n    this.in_history = 0;\n\n    if (restore_state[this.id]) {\n      [\n        this.in_history,\n        this.checked,\n        this.item_order,\n        this.indent\n      ] = restore_state[this.id];\n    }\n  }\n  /**\n  * Completes a recurring task.\n  * @param {string} new_date_utc\n  * @param {string} date_string\n  * @param {boolean} is_forward\n  */\n  update_date_complete(new_date_utc = '', date_string = '', is_forward = 0) {\n    this.api.items.update_date_complete(this.id, new_date_utc, date_string, is_forward);\n    this.due_date_utc = new_date_utc || this.due_date_utc;\n    this.date_string = date_string || this.date_string;\n  }\n};\n\nexport default Item;\n"]}
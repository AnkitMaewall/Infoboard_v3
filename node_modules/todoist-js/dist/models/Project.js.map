{"version":3,"sources":["../../todoist/models/Project.js"],"names":["Project","api","projects","update","id","params","Object","assign","data","delete","is_deleted","archive","is_archived","unarchive","share","email","message","take_ownership","name","color","indent","item_order","collapsed","shared"],"mappings":"ikCAKMA,Q,oOAoBW,CACb,KAAKC,GAAL,CAASC,QAAT,CAAkBC,MAAlB,CAAyB,KAAKC,EAA9B,CAAkCC,CAAlC,CADa,CAEbC,OAAOC,MAAP,CAAc,KAAKC,IAAnB,CAAyBH,CAAzB,CACD,C,wCAKQ,CACP,KAAKJ,GAAL,CAASC,QAAT,CAAkBO,MAAlB,CAAyB,CAAC,KAAKL,EAAN,CAAzB,CADO,CAEP,KAAKM,UAAL,CAAkB,CACnB,C,yCAKS,CACR,KAAKT,GAAL,CAASC,QAAT,CAAkBS,OAAlB,CAA0B,KAAKP,EAA/B,CADQ,CAER,KAAKQ,WAAL,CAAmB,CACpB,C,6CAKW,CACV,KAAKX,GAAL,CAASC,QAAT,CAAkBW,SAAlB,CAA4B,KAAKT,EAAjC,CADU,CAEV,KAAKQ,WAAL,CAAmB,CACpB,C,sCAO0B,8DAAJ,EAAI,CACzB,KAAKX,GAAL,CAASC,QAAT,CAAkBY,KAAlB,CAAwB,KAAKV,EAA7B,CAAiCW,CAAjC,CAAwCC,CAAxC,CACD,C,uDAKgB,CACf,KAAKf,GAAL,CAASC,QAAT,CAAkBe,cAAlB,CAAiC,KAAKb,EAAtC,CACD,C,sCA7DgB,CACf,MAAO,CACLA,GAAI,CADC,CAELc,KAAM,EAFD,CAGLC,MAAO,CAHF,CAILC,OAAQ,CAJH,CAKLC,WAAY,CALP,CAMLC,UAAW,CANN,CAOLC,OAAQ,CAPH,CAQLb,WAAY,CARP,CASLE,YAAa,CATR,CAWR,C,wCAoDYZ,O","file":"Project.js","sourcesContent":["import Model from './Model';\n\n/**\n* Implements a project.\n*/\nclass Project extends Model {\n\n  get definition() {\n    return {\n      id: 0,\n      name: '',\n      color: 0,\n      indent: 0,\n      item_order: 0,\n      collapsed: 0,\n      shared: 0,\n      is_deleted: 0,\n      is_archived: 0,\n    };\n  }\n\n  /**\n  * Updates project.\n  * @param {Object} params\n  */\n  update(params) {\n    this.api.projects.update(this.id, params);\n    Object.assign(this.data, params);\n  }\n\n  /**\n  * Deletes project.\n  */\n  delete() {\n    this.api.projects.delete([this.id]);\n    this.is_deleted = 1;\n  }\n\n  /**\n  * Marks project as archived.\n  */\n  archive() {\n    this.api.projects.archive(this.id);\n    this.is_archived = 1;\n  }\n\n  /**\n  * Marks project as not archived.\n  */\n  unarchive() {\n    this.api.projects.unarchive(this.id);\n    this.is_archived = 0;\n  }\n\n  /**\n  * Shares projects with a user.\n  * @param {string} email\n  * @param {string} message\n  */\n  share(email, message = '') {\n    this.api.projects.share(this.id, email, message);\n  }\n\n  /**\n  * Takes ownership of a shared project.\n  */\n  take_ownership() {\n    this.api.projects.take_ownership(this.id);\n  }\n}\n\nexport default Project;\n"]}